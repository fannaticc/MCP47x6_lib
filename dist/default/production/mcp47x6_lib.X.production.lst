

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jun 29 15:20:39 2018

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26                           	psect	pa_nodes,global,class=CODE,delta=1
    27  0000                     tblptrh	equ	0xFF7
    28                           tblptrl	equ	0xFF6
    29                           tablat	equ	0xFF5
    30                           wreg	equ	0xFE8
    31                           status	equ	0xFD8
    32                           
    33                           	psect	idataCOMRAM
    34  0009D2                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _degree_symbol
    38  0009D2  06                 	db	6
    39  0009D3  09                 	db	9
    40  0009D4  09                 	db	9
    41  0009D5  06                 	db	6
    42  0009D6  00                 	db	0
    43  0009D7  00                 	db	0
    44  0009D8  00                 	db	0
    45  0009D9  00                 	db	0
    46  0000                     _ADCON1	set	4033
    47  0000                     _CMCON	set	4020
    48  0000                     _LATBbits	set	3978
    49  0000                     _OSCCON	set	4051
    50  0000                     _SSPADD	set	4040
    51  0000                     _SSPBUF	set	4041
    52  0000                     _SSPCON1	set	4038
    53  0000                     _SSPCON1bits	set	4038
    54  0000                     _SSPCON2	set	4037
    55  0000                     _SSPCON2bits	set	4037
    56  0000                     _SSPSTAT	set	4039
    57  0000                     _SSPSTATbits	set	4039
    58  0000                     _TRISB	set	3987
    59  0000                     _TRISBbits	set	3987
    60  0000                     _TRISC	set	3988
    61  0000                     _TRISCbits	set	3988
    62                           tblptrh	equ	0xFF7
    63                           tblptrl	equ	0xFF6
    64                           tablat	equ	0xFF5
    65                           wreg	equ	0xFE8
    66                           status	equ	0xFD8
    67                           
    68                           	psect	smallconst
    69  000600                     __psmallconst:
    70                           	opt stack 0
    71  000600  00                 	db	0
    72  000601                     STR_1:
    73  000601  41                 	db	65	;'A'
    74  000602  44                 	db	68	;'D'
    75  000603  43                 	db	67	;'C'
    76  000604  3A                 	db	58	;':'
    77  000605  00                 	db	0
    78                           
    79                           ; #config settings
    80  000606  00                 	db	0	; dummy byte at the end
    81  0000                     tblptrh	equ	0xFF7
    82                           tblptrl	equ	0xFF6
    83                           tablat	equ	0xFF5
    84                           wreg	equ	0xFE8
    85                           status	equ	0xFD8
    86                           
    87                           	psect	cinit
    88  0008F4                     __pcinit:
    89                           	opt stack 0
    90  0008F4                     start_initialization:
    91                           	opt stack 0
    92  0008F4                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (8 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97  0008F4  0ED2               	movlw	low __pidataCOMRAM
    98  0008F6  6EF6               	movwf	tblptrl,c
    99  0008F8  0E09               	movlw	high __pidataCOMRAM
   100  0008FA  6EF7               	movwf	tblptrh,c
   101  0008FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102  0008FE  6EF8               	movwf	tblptru,c
   103  000900  EE00  F001         	lfsr	0,__pdataCOMRAM
   104  000904  EE10 F008          	lfsr	1,8
   105  000908                     copy_data0:
   106  000908  0009               	tblrd		*+
   107  00090A  CFF5 FFEE          	movff	tablat,postinc0
   108  00090E  50E5               	movf	postdec1,w,c
   109  000910  50E1               	movf	fsr1l,w,c
   110  000912  E1FA               	bnz	copy_data0
   111  000914                     end_of_initialization:
   112                           	opt stack 0
   113  000914                     __end_of__initialization:
   114                           	opt stack 0
   115  000914  0E00               	movlw	low (__Lmediumconst shr (0+16))
   116  000916  6EF8               	movwf	tblptru,c
   117  000918  0100               	movlb	0
   118  00091A  EF55  F004         	goto	_main	;jump to C main() function
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           postinc0	equ	0xFEE
   124                           wreg	equ	0xFE8
   125                           postdec1	equ	0xFE5
   126                           fsr1l	equ	0xFE1
   127                           status	equ	0xFD8
   128                           
   129                           	psect	dataCOMRAM
   130  000001                     __pdataCOMRAM:
   131                           	opt stack 0
   132  000001                     _degree_symbol:
   133                           	opt stack 0
   134  000001                     	ds	8
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           wreg	equ	0xFE8
   141                           postdec1	equ	0xFE5
   142                           fsr1l	equ	0xFE1
   143                           status	equ	0xFD8
   144                           
   145                           	psect	cstackCOMRAM
   146  000009                     __pcstackCOMRAM:
   147                           	opt stack 0
   148  000009                     ??_Lcd_Delay5500us:
   149  000009                     ??_I2C_Idle:
   150  000009                     I2C_Init@clock_output:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x0
   154  000009                     	ds	1
   155  00000A                     ??_Lcd_Command:
   156  00000A                     ??_Lcd_CharCP:
   157  00000A                     I2C_WriteByte@data_out:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x1
   161  00000A                     	ds	1
   162  00000B                     MCP47x6_Write_DAC@value_dac:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x2
   166  00000B                     	ds	1
   167  00000C                     Lcd_CharCP@c:
   168                           	opt stack 0
   169  00000C                     Lcd_Command@command:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x3
   173  00000C                     	ds	1
   174  00000D                     Lcd_Init@data:
   175                           	opt stack 0
   176  00000D                     Lcd_Text@x:
   177                           	opt stack 0
   178  00000D                     MCP47x6_Write_DAC@mcp47x6_adr:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x4
   182  00000D                     	ds	1
   183  00000E                     Lcd_Text@buffer:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x5
   187  00000E                     	ds	1
   188  00000F                     Lcd_Text@y:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x6
   192  00000F                     	ds	1
   193  000010                     Lcd_Text@data:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x7
   197  000010                     	ds	1
   198  000011                     tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           status	equ	0xFD8
   207                           
   208                           ; 0 bytes @ 0x8
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 16 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  aux            20    0        unsigned char [20]
   219 ;;  read_adc        2    0        unsigned int 
   220 ;; Return value:  Size  Location     Type
   221 ;;		None               void
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   229 ;;      Params:         0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    3
   235 ;; This function calls:
   236 ;;		_I2C_Close
   237 ;;		_I2C_Init
   238 ;;		_Lcd_Command
   239 ;;		_Lcd_Init
   240 ;;		_Lcd_Text
   241 ;;		_MCP47x6_Write_DAC
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text0
   248  0008AA                     __ptext0:
   249                           	opt stack 0
   250  0008AA                     _main:
   251                           	opt stack 28
   252                           
   253                           ;main.c: 18: unsigned int read_adc;
   254                           ;main.c: 19: unsigned char aux[20];
   255                           ;main.c: 21: OSCCON = 0b01110010;
   256                           
   257                           ;incstack = 0
   258  0008AA  0E72               	movlw	114
   259  0008AC  6ED3               	movwf	4051,c	;volatile
   260                           
   261                           ;main.c: 23: ADCON1 = 0b00001111;
   262  0008AE  0E0F               	movlw	15
   263  0008B0  6EC1               	movwf	4033,c	;volatile
   264                           
   265                           ;main.c: 24: CMCON = 0b00000111;
   266  0008B2  0E07               	movlw	7
   267  0008B4  6EB4               	movwf	4020,c	;volatile
   268                           
   269                           ;main.c: 26: TRISB = 0b11000000;
   270  0008B6  0EC0               	movlw	192
   271  0008B8  6E93               	movwf	3987,c	;volatile
   272                           
   273                           ;main.c: 27: TRISC = 0b00011000;
   274  0008BA  0E18               	movlw	24
   275  0008BC  6E94               	movwf	3988,c	;volatile
   276                           
   277                           ;main.c: 29: Lcd_Init();
   278  0008BE  ECDA  F003         	call	_Lcd_Init	;wreg free
   279                           
   280                           ;main.c: 30: Lcd_Command(1);
   281  0008C2  0E01               	movlw	1
   282  0008C4  EC6F  F003         	call	_Lcd_Command
   283                           
   284                           ;main.c: 31: Lcd_Command(12);
   285  0008C8  0E0C               	movlw	12
   286  0008CA  EC6F  F003         	call	_Lcd_Command
   287                           
   288                           ;main.c: 33: I2C_Close();
   289  0008CE  ECED  F004         	call	_I2C_Close	;wreg free
   290                           
   291                           ;main.c: 35: I2C_Init(10);
   292  0008D2  0E0A               	movlw	10
   293  0008D4  ECB3  F004         	call	_I2C_Init
   294                           
   295                           ;main.c: 39: Lcd_Text(1, 1, "ADC:");
   296  0008D8  0E01               	movlw	1
   297  0008DA  6E0D               	movwf	Lcd_Text@x,c
   298  0008DC  0E01               	movlw	low STR_1
   299  0008DE  6E0E               	movwf	Lcd_Text@buffer,c
   300  0008E0  0E01               	movlw	1
   301  0008E2  EC2A  F004         	call	_Lcd_Text
   302                           
   303                           ;main.c: 42: MCP47x6_Write_DAC(0xC6, 1024);
   304  0008E6  0E04               	movlw	4
   305  0008E8  6E0C               	movwf	MCP47x6_Write_DAC@value_dac+1,c
   306  0008EA  6A0B               	clrf	MCP47x6_Write_DAC@value_dac,c
   307  0008EC  0EC6               	movlw	198
   308  0008EE  ECA4  F004         	call	_MCP47x6_Write_DAC
   309  0008F2  D7FF               	goto	l234
   310  0008F4                     __end_of_main:
   311                           	opt stack 0
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           status	equ	0xFD8
   321                           
   322 ;; *************** function _MCP47x6_Write_DAC *****************
   323 ;; Defined at:
   324 ;;		line 53 in file "mcp47x6.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;  mcp47x6_adr     1    wreg     unsigned char 
   327 ;;  value_dac       2    2[COMRAM] unsigned int 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;  mcp47x6_adr     1    4[COMRAM] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;		None               void
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   339 ;;      Params:         2       0       0       0       0       0       0
   340 ;;      Locals:         1       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0
   342 ;;      Totals:         3       0       0       0       0       0       0
   343 ;;Total ram usage:        3 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; Hardware stack levels required when called:    2
   346 ;; This function calls:
   347 ;;		_I2C_Start
   348 ;;		_I2C_Stop
   349 ;;		_I2C_WriteByte
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356  000948                     __ptext1:
   357                           	opt stack 0
   358  000948                     _MCP47x6_Write_DAC:
   359                           	opt stack 28
   360                           
   361                           ;incstack = 0
   362                           ;MCP47x6_Write_DAC@mcp47x6_adr stored from wreg
   363  000948  6E0D               	movwf	MCP47x6_Write_DAC@mcp47x6_adr,c
   364                           
   365                           ;mcp47x6.c: 58: I2C_Start();
   366  00094A  ECE3  F004         	call	_I2C_Start	;wreg free
   367                           
   368                           ;mcp47x6.c: 59: I2C_WriteByte(mcp47x6_adr);
   369  00094E  500D               	movf	MCP47x6_Write_DAC@mcp47x6_adr,w,c
   370  000950  EC8F  F004         	call	_I2C_WriteByte
   371                           
   372                           ;mcp47x6.c: 60: I2C_WriteByte((unsigned char) ((value_dac >> 8) & 0x0F));
   373  000954  500C               	movf	MCP47x6_Write_DAC@value_dac+1,w,c
   374  000956  0B0F               	andlw	15
   375  000958  EC8F  F004         	call	_I2C_WriteByte
   376                           
   377                           ;mcp47x6.c: 61: I2C_WriteByte((unsigned char) value_dac);
   378  00095C  500B               	movf	MCP47x6_Write_DAC@value_dac,w,c
   379  00095E  EC8F  F004         	call	_I2C_WriteByte
   380                           
   381                           ;mcp47x6.c: 62: I2C_Stop();
   382  000962  EFDD  F004         	goto	_I2C_Stop	;wreg free
   383  000966                     __end_of_MCP47x6_Write_DAC:
   384                           	opt stack 0
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           status	equ	0xFD8
   394                           
   395 ;; *************** function _I2C_WriteByte *****************
   396 ;; Defined at:
   397 ;;		line 98 in file "my_i2c.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  data_out        1    wreg     unsigned char 
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  data_out        1    1[COMRAM] unsigned char 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      unsigned char 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   411 ;;      Params:         0       0       0       0       0       0       0
   412 ;;      Locals:         1       0       0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0
   414 ;;      Totals:         1       0       0       0       0       0       0
   415 ;;Total ram usage:        1 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; Hardware stack levels required when called:    1
   418 ;; This function calls:
   419 ;;		_I2C_Idle
   420 ;; This function is called by:
   421 ;;		_MCP47x6_Write_DAC
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text2
   426  00091E                     __ptext2:
   427                           	opt stack 0
   428  00091E                     _I2C_WriteByte:
   429                           	opt stack 28
   430                           
   431                           ;incstack = 0
   432                           ;I2C_WriteByte@data_out stored from wreg
   433  00091E  6E0A               	movwf	I2C_WriteByte@data_out,c
   434                           
   435                           ;my_i2c.c: 100: I2C_Idle();
   436  000920  ECC0  F004         	call	_I2C_Idle	;wreg free
   437                           
   438                           ;my_i2c.c: 102: SSPBUF = data_out;
   439  000924  C00A  FFC9         	movff	I2C_WriteByte@data_out,4041	;volatile
   440                           
   441                           ;my_i2c.c: 104: if(SSPCON1bits.WCOL)
   442  000928  BEC6               	btfsc	4038,7,c	;volatile
   443  00092A  D00D               	goto	l193
   444                           
   445                           ;my_i2c.c: 108: else
   446                           ;my_i2c.c: 109: {
   447                           ;my_i2c.c: 110: if(((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
   448  00092C  50C6               	movf	4038,w,c	;volatile
   449  00092E  0B0F               	andlw	15
   450  000930  0A08               	xorlw	8
   451  000932  E004               	bz	l198
   452  000934  50C6               	movf	4038,w,c	;volatile
   453  000936  0B0F               	andlw	15
   454  000938  0A0B               	xorlw	11
   455  00093A  E105               	bnz	l193
   456  00093C                     l198:
   457  00093C  B0C7               	btfsc	4039,0,c	;volatile
   458  00093E  D7FE               	goto	l198
   459                           
   460                           ;my_i2c.c: 114: I2C_Idle();
   461  000940  ECC0  F004         	call	_I2C_Idle	;wreg free
   462                           
   463                           ;my_i2c.c: 116: if(SSPCON2bits.ACKSTAT)
   464  000944  50C5               	movf	4037,w,c	;volatile
   465  000946                     l193:
   466  000946  0012               	return		;funcret
   467  000948                     __end_of_I2C_WriteByte:
   468                           	opt stack 0
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           status	equ	0xFD8
   478                           
   479 ;; *************** function _I2C_Stop *****************
   480 ;; Defined at:
   481 ;;		line 45 in file "my_i2c.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;		None               void
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         0       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    1
   502 ;; This function calls:
   503 ;;		_I2C_Idle
   504 ;; This function is called by:
   505 ;;		_MCP47x6_Write_DAC
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text3
   510  0009BA                     __ptext3:
   511                           	opt stack 0
   512  0009BA                     _I2C_Stop:
   513                           	opt stack 28
   514                           
   515                           ;my_i2c.c: 47: I2C_Idle();
   516                           
   517                           ;incstack = 0
   518  0009BA  ECC0  F004         	call	_I2C_Idle	;wreg free
   519                           
   520                           ;my_i2c.c: 48: SSPCON2bits.PEN = 1;
   521  0009BE  84C5               	bsf	4037,2,c	;volatile
   522  0009C0                     l160:
   523  0009C0  A4C5               	btfss	4037,2,c	;volatile
   524  0009C2  0012               	return		;funcret
   525  0009C4  D7FD               	goto	l160
   526  0009C6                     __end_of_I2C_Stop:
   527                           	opt stack 0
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           status	equ	0xFD8
   537                           
   538 ;; *************** function _I2C_Start *****************
   539 ;; Defined at:
   540 ;;		line 27 in file "my_i2c.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;		None               void
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   554 ;;      Params:         0       0       0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    1
   561 ;; This function calls:
   562 ;;		_I2C_Idle
   563 ;; This function is called by:
   564 ;;		_MCP47x6_Write_DAC
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text4
   569  0009C6                     __ptext4:
   570                           	opt stack 0
   571  0009C6                     _I2C_Start:
   572                           	opt stack 28
   573                           
   574                           ;my_i2c.c: 29: I2C_Idle();
   575                           
   576                           ;incstack = 0
   577  0009C6  ECC0  F004         	call	_I2C_Idle	;wreg free
   578                           
   579                           ;my_i2c.c: 31: SSPCON2bits.SEN = 1;
   580  0009CA  80C5               	bsf	4037,0,c	;volatile
   581  0009CC                     l148:
   582  0009CC  A0C5               	btfss	4037,0,c	;volatile
   583  0009CE  0012               	return		;funcret
   584  0009D0  D7FD               	goto	l148
   585  0009D2                     __end_of_I2C_Start:
   586                           	opt stack 0
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           postdec1	equ	0xFE5
   594                           fsr1l	equ	0xFE1
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _I2C_Idle *****************
   598 ;; Defined at:
   599 ;;		line 52 in file "my_i2c.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;		None               void
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   613 ;;      Params:         0       0       0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0
   615 ;;      Temps:          1       0       0       0       0       0       0
   616 ;;      Totals:         1       0       0       0       0       0       0
   617 ;;Total ram usage:        1 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_I2C_Start
   623 ;;		_I2C_Stop
   624 ;;		_I2C_WriteByte
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text5
   629  000980                     __ptext5:
   630                           	opt stack 0
   631  000980                     _I2C_Idle:
   632                           	opt stack 28
   633  000980                     l840:
   634  000980  A4C7               	btfss	4039,2,c	;volatile
   635  000982  D003               	goto	u10
   636  000984  6A09               	clrf	??_I2C_Idle& (0+255),c
   637  000986  2A09               	incf	??_I2C_Idle& (0+255),f,c
   638  000988  D001               	goto	u18
   639  00098A                     u10:
   640  00098A  6A09               	clrf	??_I2C_Idle& (0+255),c
   641  00098C                     u18:
   642  00098C  50C5               	movf	4037,w,c	;volatile
   643  00098E  0B1F               	andlw	31
   644  000990  1009               	iorwf	??_I2C_Idle,w,c
   645  000992  B4D8               	btfsc	status,2,c
   646  000994  0012               	return		;funcret
   647  000996  D7F4               	goto	l840
   648  000998                     __end_of_I2C_Idle:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           status	equ	0xFD8
   659                           
   660 ;; *************** function _Lcd_Text *****************
   661 ;; Defined at:
   662 ;;		line 105 in file "hd44780.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  y               1    wreg     unsigned char 
   665 ;;  x               1    4[COMRAM] unsigned char 
   666 ;;  buffer          1    5[COMRAM] PTR unsigned char 
   667 ;;		 -> STR_1(5), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  y               1    6[COMRAM] unsigned char 
   670 ;;  data            1    7[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;		None               void
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   680 ;;      Params:         2       0       0       0       0       0       0
   681 ;;      Locals:         2       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0
   683 ;;      Totals:         4       0       0       0       0       0       0
   684 ;;Total ram usage:        4 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		_Lcd_CharCP
   689 ;;		_Lcd_Command
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text6
   696  000854                     __ptext6:
   697                           	opt stack 0
   698  000854                     _Lcd_Text:
   699                           	opt stack 28
   700                           
   701                           ;incstack = 0
   702                           ;Lcd_Text@y stored from wreg
   703  000854  6E0F               	movwf	Lcd_Text@y,c
   704                           
   705                           ;hd44780.c: 107: unsigned char data;
   706                           ;hd44780.c: 109: switch(y)
   707  000856  D00D               	goto	l1058
   708  000858                     l1048:
   709  000858  500D               	movf	Lcd_Text@x,w,c
   710  00085A  0F7F               	addlw	127
   711  00085C  D008               	goto	L3
   712  00085E                     l1050:
   713  00085E  500D               	movf	Lcd_Text@x,w,c
   714  000860  0FBF               	addlw	191
   715  000862  D005               	goto	L3
   716  000864                     l1052:
   717  000864  500D               	movf	Lcd_Text@x,w,c
   718  000866  0F93               	addlw	147
   719  000868  D002               	goto	L3
   720  00086A                     l1054:
   721  00086A  500D               	movf	Lcd_Text@x,w,c
   722  00086C  0FD3               	addlw	211
   723  00086E                     L3:
   724  00086E  6E10               	movwf	Lcd_Text@data,c
   725                           
   726                           ;hd44780.c: 118: break;
   727  000870  D009               	goto	l1060
   728  000872                     l1058:
   729  000872  500F               	movf	Lcd_Text@y,w,c
   730                           
   731                           ; Switch size 1, requested type "space"
   732                           ; Number of cases is 4, Range of values is 1 to 4
   733                           ; switch strategies available:
   734                           ; Name         Instructions Cycles
   735                           ; simple_byte           13     7 (average)
   736                           ;	Chosen strategy is simple_byte
   737  000874  0A01               	xorlw	1	; case 1
   738  000876  E0F0               	bz	l1048
   739  000878  0A03               	xorlw	3	; case 2
   740  00087A  E0F1               	bz	l1050
   741  00087C  0A01               	xorlw	1	; case 3
   742  00087E  E0F2               	bz	l1052
   743  000880  0A07               	xorlw	7	; case 4
   744  000882  E0F3               	bz	l1054
   745  000884                     l1060:
   746                           
   747                           ;hd44780.c: 123: Lcd_Command(data);
   748  000884  5010               	movf	Lcd_Text@data,w,c
   749  000886  EC6F  F003         	call	_Lcd_Command
   750                           
   751                           ;hd44780.c: 125: while(*buffer)
   752  00088A  D004               	goto	l1066
   753  00088C                     l1062:
   754                           
   755                           ;hd44780.c: 126: {
   756                           ;hd44780.c: 127: Lcd_CharCP(*buffer);
   757  00088C  D807               	call	PL20	;call to abstracted procedure
   758  00088E  EC04  F003         	call	_Lcd_CharCP
   759                           
   760                           ;hd44780.c: 128: buffer ++;
   761  000892  2A0E               	incf	Lcd_Text@buffer,f,c
   762  000894                     l1066:
   763  000894  D803               	call	PL20	;call to abstracted procedure
   764  000896  B4D8               	btfsc	status,2,c
   765  000898  0012               	return		;funcret
   766  00089A  D7F8               	goto	l1062
   767  00089C                     __end_of_Lcd_Text:
   768                           	opt stack 0
   769  00089C                     PL20:
   770                           	opt stack 28
   771  00089C  C00E  FFF6         	movff	Lcd_Text@buffer,tblptrl
   772  0008A0                     	if	1	;There is more than 1 active tblptr byte
   773  0008A0  0E06               	movlw	high __smallconst
   774  0008A2  6EF7               	movwf	tblptrh,c
   775  0008A4                     	endif
   776  0008A4                     	if	0	;tblptru may be non-zero
   777  0008A4                     	endif
   778  0008A4                     	if	0	;tblptru may be non-zero
   779  0008A4                     	endif
   780  0008A4  0008               	tblrd		*
   781  0008A6  50F5               	movf	tablat,w,c
   782  0008A8  0012               	return	
   783  0008AA                     __end_ofPL20:
   784                           	opt stack 0
   785                           tblptru	equ	0xFF8
   786                           tblptrh	equ	0xFF7
   787                           tblptrl	equ	0xFF6
   788                           tablat	equ	0xFF5
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           postdec1	equ	0xFE5
   792                           fsr1l	equ	0xFE1
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _Lcd_CharCP *****************
   796 ;; Defined at:
   797 ;;		line 166 in file "hd44780.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  c               1    wreg     unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  c               1    3[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0
   814 ;;      Totals:         3       0       0       0       0       0       0
   815 ;;Total ram usage:        3 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		_Lcd_Delay5500us
   820 ;;		_Lcd_Delay5us
   821 ;; This function is called by:
   822 ;;		_Lcd_Text
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text7
   827  000608                     __ptext7:
   828                           	opt stack 0
   829  000608                     _Lcd_CharCP:
   830                           	opt stack 28
   831                           
   832                           ;incstack = 0
   833                           ;Lcd_CharCP@c stored from wreg
   834  000608  6E0C               	movwf	Lcd_CharCP@c,c
   835                           
   836                           ;hd44780.c: 168: LATBbits.LATB5 = 0;
   837  00060A  9A8A               	bcf	3978,5,c	;volatile
   838                           
   839                           ;hd44780.c: 169: LATBbits.LATB4 = 1;
   840  00060C  888A               	bsf	3978,4,c	;volatile
   841                           
   842                           ;hd44780.c: 171: LATBbits.LATB3 = (c & 0b10000000) >> 7;
   843  00060E  6A0A               	clrf	??_Lcd_CharCP& (0+255),c
   844  000610  AE0C               	btfss	Lcd_CharCP@c,7,c
   845  000612  D001               	bra	u65
   846  000614  2A0A               	incf	??_Lcd_CharCP& (0+255),f,c
   847  000616                     u65:
   848  000616  0E01               	movlw	1
   849                           
   850                           ;hd44780.c: 172: LATBbits.LATB2 = (c & 0b01000000) >> 6;
   851  000618  D837               	call	PL2	;call to abstracted procedure
   852  00061A  0E06               	movlw	6
   853  00061C  6E0B               	movwf	(??_Lcd_CharCP+1)& (0+255),c
   854  00061E                     u75:
   855  00061E  90D8               	bcf	status,0,c
   856  000620  320A               	rrcf	??_Lcd_CharCP,f,c
   857  000622  2E0B               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
   858  000624  D7FC               	goto	u75
   859                           
   860                           ;hd44780.c: 173: LATBbits.LATB1 = (c & 0b00100000) >> 5;
   861  000626  D83C               	call	PL6	;call to abstracted procedure
   862  000628  0E05               	movlw	5
   863  00062A  6E0B               	movwf	(??_Lcd_CharCP+1)& (0+255),c
   864  00062C                     u85:
   865  00062C  90D8               	bcf	status,0,c
   866  00062E  320A               	rrcf	??_Lcd_CharCP,f,c
   867  000630  2E0B               	decfsz	(??_Lcd_CharCP+1)& (0+255),f,c
   868  000632  D7FC               	goto	u85
   869                           
   870                           ;hd44780.c: 174: LATBbits.LATB0 = (c & 0b00010000) >> 4;
   871  000634  D841               	call	PL10	;call to abstracted procedure
   872  000636  3A0A               	swapf	??_Lcd_CharCP,f,c
   873  000638  0E0F               	movlw	15
   874  00063A  160A               	andwf	??_Lcd_CharCP,f,c
   875                           
   876                           ;hd44780.c: 176: _delay(10);
   877  00063C  D848               	call	PL14	;call to abstracted procedure
   878  00063E                     u187:
   879  00063E  2EE8               	decfsz	wreg,f,c
   880  000640  D7FE               	goto	u187
   881  000642  F000               	nop	
   882                           
   883                           ;hd44780.c: 177: LATBbits.LATB5 = 1;
   884  000644  8A8A               	bsf	3978,5,c	;volatile
   885                           
   886                           ;hd44780.c: 178: Lcd_Delay5us();
   887  000646  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
   888                           
   889                           ;hd44780.c: 179: LATBbits.LATB5 = 0;
   890  00064A  9A8A               	bcf	3978,5,c	;volatile
   891                           
   892                           ;hd44780.c: 181: LATBbits.LATB3 = (c & 0b00001000) >> 3;
   893  00064C  C00C  F00A         	movff	Lcd_CharCP@c,??_Lcd_CharCP
   894  000650  90D8               	bcf	status,0,c
   895  000652  320A               	rrcf	??_Lcd_CharCP,f,c
   896  000654  90D8               	bcf	status,0,c
   897  000656  320A               	rrcf	??_Lcd_CharCP,f,c
   898  000658  90D8               	bcf	status,0,c
   899  00065A  320A               	rrcf	??_Lcd_CharCP,f,c
   900  00065C  0E01               	movlw	1
   901                           
   902                           ;hd44780.c: 182: LATBbits.LATB2 = (c & 0b00000100) >> 2;
   903  00065E  D814               	call	PL2	;call to abstracted procedure
   904  000660  90D8               	bcf	status,0,c
   905  000662  320A               	rrcf	??_Lcd_CharCP,f,c
   906  000664  90D8               	bcf	status,0,c
   907  000666  320A               	rrcf	??_Lcd_CharCP,f,c
   908                           
   909                           ;hd44780.c: 183: LATBbits.LATB1 = (c & 0b00000010) >> 1;
   910  000668  D81B               	call	PL6	;call to abstracted procedure
   911  00066A  90D8               	bcf	status,0,c
   912  00066C  320A               	rrcf	??_Lcd_CharCP,f,c
   913                           
   914                           ;hd44780.c: 184: LATBbits.LATB0 = (c & 0b00000001);
   915  00066E  D824               	call	PL10	;call to abstracted procedure
   916                           
   917                           ;hd44780.c: 186: _delay(10);
   918  000670  D82E               	call	PL14	;call to abstracted procedure
   919  000672                     u197:
   920  000672  2EE8               	decfsz	wreg,f,c
   921  000674  D7FE               	goto	u197
   922  000676  F000               	nop	
   923                           
   924                           ;hd44780.c: 187: LATBbits.LATB5 = 1;
   925  000678  8A8A               	bsf	3978,5,c	;volatile
   926                           
   927                           ;hd44780.c: 188: Lcd_Delay5us();
   928  00067A  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
   929                           
   930                           ;hd44780.c: 189: LATBbits.LATB5 = 0;
   931  00067E  9A8A               	bcf	3978,5,c	;volatile
   932                           
   933                           ;hd44780.c: 190: Lcd_Delay5us();
   934  000680  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
   935                           
   936                           ;hd44780.c: 191: Lcd_Delay5500us();
   937  000684  EFD5  F004         	goto	_Lcd_Delay5500us	;wreg free
   938  000688                     __end_of_Lcd_CharCP:
   939                           	opt stack 0
   940  000688                     PL2:
   941                           	opt stack 28
   942  000688  160A               	andwf	??_Lcd_CharCP,f,c
   943  00068A  460A               	rlncf	??_Lcd_CharCP,f,c
   944  00068C  460A               	rlncf	??_Lcd_CharCP,f,c
   945  00068E  460A               	rlncf	??_Lcd_CharCP,f,c
   946  000690  508A               	movf	3978,w,c	;volatile
   947  000692  180A               	xorwf	??_Lcd_CharCP,w,c
   948  000694  0BF7               	andlw	-9
   949  000696  180A               	xorwf	??_Lcd_CharCP,w,c
   950  000698  6E8A               	movwf	3978,c	;volatile
   951  00069A  C00C  F00A         	movff	Lcd_CharCP@c,??_Lcd_CharCP
   952  00069E  0012               	return	
   953  0006A0                     __end_ofPL2:
   954                           	opt stack 0
   955  0006A0                     PL6:
   956                           	opt stack 28
   957  0006A0  0E01               	movlw	1
   958  0006A2  160A               	andwf	??_Lcd_CharCP,f,c
   959  0006A4  460A               	rlncf	??_Lcd_CharCP,f,c
   960  0006A6  460A               	rlncf	??_Lcd_CharCP,f,c
   961  0006A8  508A               	movf	3978,w,c	;volatile
   962  0006AA  180A               	xorwf	??_Lcd_CharCP,w,c
   963  0006AC  0BFB               	andlw	-5
   964  0006AE  180A               	xorwf	??_Lcd_CharCP,w,c
   965  0006B0  6E8A               	movwf	3978,c	;volatile
   966  0006B2  C00C  F00A         	movff	Lcd_CharCP@c,??_Lcd_CharCP
   967  0006B6  0012               	return	
   968  0006B8                     __end_ofPL6:
   969                           	opt stack 0
   970  0006B8                     PL10:
   971                           	opt stack 28
   972  0006B8  0E01               	movlw	1
   973  0006BA  160A               	andwf	??_Lcd_CharCP,f,c
   974  0006BC  460A               	rlncf	??_Lcd_CharCP,f,c
   975  0006BE  508A               	movf	3978,w,c	;volatile
   976  0006C0  180A               	xorwf	??_Lcd_CharCP,w,c
   977  0006C2  0BFD               	andlw	-3
   978  0006C4  180A               	xorwf	??_Lcd_CharCP,w,c
   979  0006C6  6E8A               	movwf	3978,c	;volatile
   980  0006C8  C00C  F00A         	movff	Lcd_CharCP@c,??_Lcd_CharCP
   981  0006CC  0012               	return	
   982  0006CE                     __end_ofPL10:
   983                           	opt stack 0
   984  0006CE                     PL14:
   985                           	opt stack 28
   986  0006CE  0E01               	movlw	1
   987  0006D0  160A               	andwf	??_Lcd_CharCP,f,c
   988  0006D2  508A               	movf	3978,w,c	;volatile
   989  0006D4  180A               	xorwf	??_Lcd_CharCP,w,c
   990  0006D6  0BFE               	andlw	-2
   991  0006D8  180A               	xorwf	??_Lcd_CharCP,w,c
   992  0006DA  6E8A               	movwf	3978,c	;volatile
   993  0006DC  0C03               	retlw	3
   994  0006DE                     __end_ofPL14:
   995                           	opt stack 0
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1l	equ	0xFE1
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _Lcd_Init *****************
  1007 ;; Defined at:
  1008 ;;		line 17 in file "hd44780.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  data            1    4[COMRAM] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;		None               void
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1022 ;;      Params:         0       0       0       0       0       0       0
  1023 ;;      Locals:         1       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0
  1025 ;;      Totals:         1       0       0       0       0       0       0
  1026 ;;Total ram usage:        1 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    2
  1029 ;; This function calls:
  1030 ;;		_Lcd_Command
  1031 ;;		_Lcd_Delay5500us
  1032 ;;		_Lcd_Delay5us
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text8
  1039  0007B4                     __ptext8:
  1040                           	opt stack 0
  1041  0007B4                     _Lcd_Init:
  1042                           	opt stack 28
  1043                           
  1044                           ;hd44780.c: 19: unsigned char data;
  1045                           ;hd44780.c: 21: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBb
      +                          its.TRISB0 = 0; TRISBbits.TRISB5 = 0; TRISBbits.TRISB4 = 0;
  1046                           
  1047                           ;incstack = 0
  1048  0007B4  9693               	bcf	3987,3,c	;volatile
  1049  0007B6  9493               	bcf	3987,2,c	;volatile
  1050  0007B8  9293               	bcf	3987,1,c	;volatile
  1051  0007BA  9093               	bcf	3987,0,c	;volatile
  1052  0007BC  9A93               	bcf	3987,5,c	;volatile
  1053  0007BE  9893               	bcf	3987,4,c	;volatile
  1054                           
  1055                           ;hd44780.c: 22: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 0; LATBbits.LAT
      +                          B0 = 0; LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1056  0007C0  968A               	bcf	3978,3,c	;volatile
  1057  0007C2  948A               	bcf	3978,2,c	;volatile
  1058  0007C4  928A               	bcf	3978,1,c	;volatile
  1059  0007C6  908A               	bcf	3978,0,c	;volatile
  1060  0007C8  9A8A               	bcf	3978,5,c	;volatile
  1061  0007CA  988A               	bcf	3978,4,c	;volatile
  1062                           
  1063                           ;hd44780.c: 24: Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us(); Lcd_Delay5500us
      +                          ();
  1064  0007CC  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1065  0007D0  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1066  0007D4  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1067  0007D8  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1068                           
  1069                           ;hd44780.c: 25: Lcd_Delay5500us(); Lcd_Delay5500us();
  1070  0007DC  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1071  0007E0  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1072                           
  1073                           ;hd44780.c: 27: for(data = 1; data < 4; data ++)
  1074  0007E4  0E01               	movlw	1
  1075  0007E6  6E0D               	movwf	Lcd_Init@data,c
  1076  0007E8                     l19:
  1077                           
  1078                           ;hd44780.c: 28: {
  1079                           ;hd44780.c: 29: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 1; LATBbits.LATB5 = 0;
  1080                           
  1081                           ;hd44780.c: 30: LATBbits.LATB4 = 0;
  1082  0007E8  D82E               	call	PL22	;call to abstracted procedure
  1083                           
  1084                           ;hd44780.c: 31: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 1; LATBbits.LATB5 = 1;
  1085  0007EA  968A               	bcf	3978,3,c	;volatile
  1086  0007EC  948A               	bcf	3978,2,c	;volatile
  1087  0007EE  828A               	bsf	3978,1,c	;volatile
  1088  0007F0  808A               	bsf	3978,0,c	;volatile
  1089  0007F2  8A8A               	bsf	3978,5,c	;volatile
  1090                           
  1091                           ;hd44780.c: 32: LATBbits.LATB4 = 0;
  1092  0007F4  988A               	bcf	3978,4,c	;volatile
  1093                           
  1094                           ;hd44780.c: 34: Lcd_Delay5us();
  1095  0007F6  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
  1096                           
  1097                           ;hd44780.c: 36: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 1; LATBbits.LATB5 = 0;
  1098                           
  1099                           ;hd44780.c: 37: LATBbits.LATB4 = 0;
  1100  0007FA  D825               	call	PL22	;call to abstracted procedure
  1101                           
  1102                           ;hd44780.c: 39: Lcd_Delay5500us();
  1103  0007FC  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1104  000800  2A0D               	incf	Lcd_Init@data,f,c
  1105  000802  0E03               	movlw	3
  1106  000804  640D               	cpfsgt	Lcd_Init@data,c
  1107  000806  D7F0               	goto	l19
  1108                           
  1109                           ;hd44780.c: 40: }
  1110                           ;hd44780.c: 42: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 0; LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1111  000808  D817               	call	PL18	;call to abstracted procedure
  1112                           
  1113                           ;hd44780.c: 43: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 0; LATBbits.LATB5 = 1; LATBbits.LATB4 = 0;
  1114  00080A  968A               	bcf	3978,3,c	;volatile
  1115  00080C  948A               	bcf	3978,2,c	;volatile
  1116  00080E  828A               	bsf	3978,1,c	;volatile
  1117  000810  908A               	bcf	3978,0,c	;volatile
  1118  000812  8A8A               	bsf	3978,5,c	;volatile
  1119  000814  988A               	bcf	3978,4,c	;volatile
  1120                           
  1121                           ;hd44780.c: 45: Lcd_Delay5us();
  1122  000816  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
  1123                           
  1124                           ;hd44780.c: 47: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LAT
      +                          B0 = 0; LATBbits.LATB5 = 0; LATBbits.LATB4 = 0;
  1125  00081A  D80E               	call	PL18	;call to abstracted procedure
  1126                           
  1127                           ;hd44780.c: 49: Lcd_Delay5500us();
  1128  00081C  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1129                           
  1130                           ;hd44780.c: 52: Lcd_Command(40);
  1131  000820  0E28               	movlw	40
  1132  000822  EC6F  F003         	call	_Lcd_Command
  1133                           
  1134                           ;hd44780.c: 55: Lcd_Command(16);
  1135  000826  0E10               	movlw	16
  1136  000828  EC6F  F003         	call	_Lcd_Command
  1137                           
  1138                           ;hd44780.c: 58: Lcd_Command(1);
  1139  00082C  0E01               	movlw	1
  1140  00082E  EC6F  F003         	call	_Lcd_Command
  1141                           
  1142                           ;hd44780.c: 61: Lcd_Command(15);
  1143  000832  0E0F               	movlw	15
  1144  000834  EF6F  F003         	goto	_Lcd_Command
  1145  000838                     __end_of_Lcd_Init:
  1146                           	opt stack 0
  1147  000838                     PL18:
  1148                           	opt stack 28
  1149  000838  968A               	bcf	3978,3,c	;volatile
  1150  00083A  948A               	bcf	3978,2,c	;volatile
  1151  00083C  828A               	bsf	3978,1,c	;volatile
  1152  00083E  908A               	bcf	3978,0,c	;volatile
  1153  000840  9A8A               	bcf	3978,5,c	;volatile
  1154  000842  988A               	bcf	3978,4,c	;volatile
  1155  000844  0012               	return	
  1156  000846                     __end_ofPL18:
  1157                           	opt stack 0
  1158  000846                     PL22:
  1159                           	opt stack 28
  1160  000846  968A               	bcf	3978,3,c	;volatile
  1161  000848  948A               	bcf	3978,2,c	;volatile
  1162  00084A  828A               	bsf	3978,1,c	;volatile
  1163  00084C  808A               	bsf	3978,0,c	;volatile
  1164  00084E  9A8A               	bcf	3978,5,c	;volatile
  1165  000850  988A               	bcf	3978,4,c	;volatile
  1166  000852  0012               	return	
  1167  000854                     __end_ofPL22:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           postdec1	equ	0xFE5
  1176                           fsr1l	equ	0xFE1
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _Lcd_Command *****************
  1180 ;; Defined at:
  1181 ;;		line 198 in file "hd44780.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  command         1    wreg     unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  command         1    3[COMRAM] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;		None               void
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         1       0       0       0       0       0       0
  1197 ;;      Temps:          2       0       0       0       0       0       0
  1198 ;;      Totals:         3       0       0       0       0       0       0
  1199 ;;Total ram usage:        3 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    1
  1202 ;; This function calls:
  1203 ;;		_Lcd_Delay5500us
  1204 ;;		_Lcd_Delay5us
  1205 ;; This function is called by:
  1206 ;;		_Lcd_Init
  1207 ;;		_Lcd_Text
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text9
  1213  0006DE                     __ptext9:
  1214                           	opt stack 0
  1215  0006DE                     _Lcd_Command:
  1216                           	opt stack 28
  1217                           
  1218                           ;incstack = 0
  1219                           ;Lcd_Command@command stored from wreg
  1220  0006DE  6E0C               	movwf	Lcd_Command@command,c
  1221                           
  1222                           ;hd44780.c: 200: LATBbits.LATB5 = 0;
  1223  0006E0  9A8A               	bcf	3978,5,c	;volatile
  1224                           
  1225                           ;hd44780.c: 201: LATBbits.LATB4 = 0;
  1226  0006E2  988A               	bcf	3978,4,c	;volatile
  1227                           
  1228                           ;hd44780.c: 203: LATBbits.LATB3 = (command & 0b10000000) >> 7;
  1229  0006E4  6A0A               	clrf	??_Lcd_Command& (0+255),c
  1230  0006E6  AE0C               	btfss	Lcd_Command@command,7,c
  1231  0006E8  D001               	bra	u35
  1232  0006EA  2A0A               	incf	??_Lcd_Command& (0+255),f,c
  1233  0006EC                     u35:
  1234  0006EC  0E01               	movlw	1
  1235                           
  1236                           ;hd44780.c: 204: LATBbits.LATB2 = (command & 0b01000000) >> 6;
  1237  0006EE  D837               	call	PL4	;call to abstracted procedure
  1238  0006F0  0E06               	movlw	6
  1239  0006F2  6E0B               	movwf	(??_Lcd_Command+1)& (0+255),c
  1240  0006F4                     u45:
  1241  0006F4  90D8               	bcf	status,0,c
  1242  0006F6  320A               	rrcf	??_Lcd_Command,f,c
  1243  0006F8  2E0B               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  1244  0006FA  D7FC               	goto	u45
  1245                           
  1246                           ;hd44780.c: 205: LATBbits.LATB1 = (command & 0b00100000) >> 5;
  1247  0006FC  D83C               	call	PL8	;call to abstracted procedure
  1248  0006FE  0E05               	movlw	5
  1249  000700  6E0B               	movwf	(??_Lcd_Command+1)& (0+255),c
  1250  000702                     u55:
  1251  000702  90D8               	bcf	status,0,c
  1252  000704  320A               	rrcf	??_Lcd_Command,f,c
  1253  000706  2E0B               	decfsz	(??_Lcd_Command+1)& (0+255),f,c
  1254  000708  D7FC               	goto	u55
  1255                           
  1256                           ;hd44780.c: 206: LATBbits.LATB0 = (command & 0b00010000) >> 4;
  1257  00070A  D841               	call	PL12	;call to abstracted procedure
  1258  00070C  3A0A               	swapf	??_Lcd_Command,f,c
  1259  00070E  0E0F               	movlw	15
  1260  000710  160A               	andwf	??_Lcd_Command,f,c
  1261                           
  1262                           ;hd44780.c: 208: _delay(10);
  1263  000712  D848               	call	PL16	;call to abstracted procedure
  1264  000714                     u207:
  1265  000714  2EE8               	decfsz	wreg,f,c
  1266  000716  D7FE               	goto	u207
  1267  000718  F000               	nop	
  1268                           
  1269                           ;hd44780.c: 209: LATBbits.LATB5 = 1;
  1270  00071A  8A8A               	bsf	3978,5,c	;volatile
  1271                           
  1272                           ;hd44780.c: 210: Lcd_Delay5us();
  1273  00071C  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
  1274                           
  1275                           ;hd44780.c: 211: LATBbits.LATB5 = 0;
  1276  000720  9A8A               	bcf	3978,5,c	;volatile
  1277                           
  1278                           ;hd44780.c: 213: LATBbits.LATB3 = (command & 0b00001000) >> 3;
  1279  000722  C00C  F00A         	movff	Lcd_Command@command,??_Lcd_Command
  1280  000726  90D8               	bcf	status,0,c
  1281  000728  320A               	rrcf	??_Lcd_Command,f,c
  1282  00072A  90D8               	bcf	status,0,c
  1283  00072C  320A               	rrcf	??_Lcd_Command,f,c
  1284  00072E  90D8               	bcf	status,0,c
  1285  000730  320A               	rrcf	??_Lcd_Command,f,c
  1286  000732  0E01               	movlw	1
  1287                           
  1288                           ;hd44780.c: 214: LATBbits.LATB2 = (command & 0b00000100) >> 2;
  1289  000734  D814               	call	PL4	;call to abstracted procedure
  1290  000736  90D8               	bcf	status,0,c
  1291  000738  320A               	rrcf	??_Lcd_Command,f,c
  1292  00073A  90D8               	bcf	status,0,c
  1293  00073C  320A               	rrcf	??_Lcd_Command,f,c
  1294                           
  1295                           ;hd44780.c: 215: LATBbits.LATB1 = (command & 0b00000010) >> 1;
  1296  00073E  D81B               	call	PL8	;call to abstracted procedure
  1297  000740  90D8               	bcf	status,0,c
  1298  000742  320A               	rrcf	??_Lcd_Command,f,c
  1299                           
  1300                           ;hd44780.c: 216: LATBbits.LATB0 = (command & 0b00000001);
  1301  000744  D824               	call	PL12	;call to abstracted procedure
  1302                           
  1303                           ;hd44780.c: 218: _delay(10);
  1304  000746  D82E               	call	PL16	;call to abstracted procedure
  1305  000748                     u217:
  1306  000748  2EE8               	decfsz	wreg,f,c
  1307  00074A  D7FE               	goto	u217
  1308  00074C  F000               	nop	
  1309                           
  1310                           ;hd44780.c: 219: LATBbits.LATB5 = 1;
  1311  00074E  8A8A               	bsf	3978,5,c	;volatile
  1312                           
  1313                           ;hd44780.c: 220: Lcd_Delay5us();
  1314  000750  ECCC  F004         	call	_Lcd_Delay5us	;wreg free
  1315                           
  1316                           ;hd44780.c: 221: LATBbits.LATB5 = 0;
  1317  000754  9A8A               	bcf	3978,5,c	;volatile
  1318                           
  1319                           ;hd44780.c: 223: Lcd_Delay5500us();
  1320  000756  ECD5  F004         	call	_Lcd_Delay5500us	;wreg free
  1321                           
  1322                           ;hd44780.c: 224: Lcd_Delay5us();
  1323  00075A  EFCC  F004         	goto	_Lcd_Delay5us	;wreg free
  1324  00075E                     __end_of_Lcd_Command:
  1325                           	opt stack 0
  1326  00075E                     PL4:
  1327                           	opt stack 28
  1328  00075E  160A               	andwf	??_Lcd_Command,f,c
  1329  000760  460A               	rlncf	??_Lcd_Command,f,c
  1330  000762  460A               	rlncf	??_Lcd_Command,f,c
  1331  000764  460A               	rlncf	??_Lcd_Command,f,c
  1332  000766  508A               	movf	3978,w,c	;volatile
  1333  000768  180A               	xorwf	??_Lcd_Command,w,c
  1334  00076A  0BF7               	andlw	-9
  1335  00076C  180A               	xorwf	??_Lcd_Command,w,c
  1336  00076E  6E8A               	movwf	3978,c	;volatile
  1337  000770  C00C  F00A         	movff	Lcd_Command@command,??_Lcd_Command
  1338  000774  0012               	return	
  1339  000776                     __end_ofPL4:
  1340                           	opt stack 0
  1341  000776                     PL8:
  1342                           	opt stack 28
  1343  000776  0E01               	movlw	1
  1344  000778  160A               	andwf	??_Lcd_Command,f,c
  1345  00077A  460A               	rlncf	??_Lcd_Command,f,c
  1346  00077C  460A               	rlncf	??_Lcd_Command,f,c
  1347  00077E  508A               	movf	3978,w,c	;volatile
  1348  000780  180A               	xorwf	??_Lcd_Command,w,c
  1349  000782  0BFB               	andlw	-5
  1350  000784  180A               	xorwf	??_Lcd_Command,w,c
  1351  000786  6E8A               	movwf	3978,c	;volatile
  1352  000788  C00C  F00A         	movff	Lcd_Command@command,??_Lcd_Command
  1353  00078C  0012               	return	
  1354  00078E                     __end_ofPL8:
  1355                           	opt stack 0
  1356  00078E                     PL12:
  1357                           	opt stack 28
  1358  00078E  0E01               	movlw	1
  1359  000790  160A               	andwf	??_Lcd_Command,f,c
  1360  000792  460A               	rlncf	??_Lcd_Command,f,c
  1361  000794  508A               	movf	3978,w,c	;volatile
  1362  000796  180A               	xorwf	??_Lcd_Command,w,c
  1363  000798  0BFD               	andlw	-3
  1364  00079A  180A               	xorwf	??_Lcd_Command,w,c
  1365  00079C  6E8A               	movwf	3978,c	;volatile
  1366  00079E  C00C  F00A         	movff	Lcd_Command@command,??_Lcd_Command
  1367  0007A2  0012               	return	
  1368  0007A4                     __end_ofPL12:
  1369                           	opt stack 0
  1370  0007A4                     PL16:
  1371                           	opt stack 28
  1372  0007A4  0E01               	movlw	1
  1373  0007A6  160A               	andwf	??_Lcd_Command,f,c
  1374  0007A8  508A               	movf	3978,w,c	;volatile
  1375  0007AA  180A               	xorwf	??_Lcd_Command,w,c
  1376  0007AC  0BFE               	andlw	-2
  1377  0007AE  180A               	xorwf	??_Lcd_Command,w,c
  1378  0007B0  6E8A               	movwf	3978,c	;volatile
  1379  0007B2  0C03               	retlw	3
  1380  0007B4                     __end_ofPL16:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           postinc0	equ	0xFEE
  1387                           wreg	equ	0xFE8
  1388                           postdec1	equ	0xFE5
  1389                           fsr1l	equ	0xFE1
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _Lcd_Delay5us *****************
  1393 ;; Defined at:
  1394 ;;		line 262 in file "hd44780.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;		None               void
  1401 ;; Registers used:
  1402 ;;		wreg
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1408 ;;      Params:         0       0       0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_Lcd_Init
  1418 ;;		_Lcd_CharCP
  1419 ;;		_Lcd_Command
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text10
  1424  000998                     __ptext10:
  1425                           	opt stack 0
  1426  000998                     _Lcd_Delay5us:
  1427                           	opt stack 28
  1428                           
  1429                           ;hd44780.c: 264: _delay((unsigned long)((5)*(20000000/4000000.0)));
  1430                           
  1431                           ;incstack = 0
  1432  000998  0E08               	movlw	8
  1433  00099A                     u227:
  1434  00099A  2EE8               	decfsz	wreg,f,c
  1435  00099C  D7FE               	goto	u227
  1436  00099E  F000               	nop	
  1437                           
  1438                           ;hd44780.c: 265: _delay((unsigned long)((5)*(20000000/4000000.0)));
  1439  0009A0  0E08               	movlw	8
  1440  0009A2                     u237:
  1441  0009A2  2EE8               	decfsz	wreg,f,c
  1442  0009A4  D7FE               	goto	u237
  1443  0009A6  F000               	nop	
  1444  0009A8  0012               	return		;funcret
  1445  0009AA                     __end_of_Lcd_Delay5us:
  1446                           	opt stack 0
  1447                           tblptru	equ	0xFF8
  1448                           tblptrh	equ	0xFF7
  1449                           tblptrl	equ	0xFF6
  1450                           tablat	equ	0xFF5
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           postdec1	equ	0xFE5
  1454                           fsr1l	equ	0xFE1
  1455                           status	equ	0xFD8
  1456                           
  1457 ;; *************** function _Lcd_Delay5500us *****************
  1458 ;; Defined at:
  1459 ;;		line 268 in file "hd44780.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;		None               void
  1466 ;; Registers used:
  1467 ;;		wreg
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1473 ;;      Params:         0       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0
  1475 ;;      Temps:          1       0       0       0       0       0       0
  1476 ;;      Totals:         1       0       0       0       0       0       0
  1477 ;;Total ram usage:        1 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_Lcd_Init
  1483 ;;		_Lcd_CharCP
  1484 ;;		_Lcd_Command
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text11
  1489  0009AA                     __ptext11:
  1490                           	opt stack 0
  1491  0009AA                     _Lcd_Delay5500us:
  1492                           	opt stack 28
  1493                           
  1494                           ;hd44780.c: 270: _delay((unsigned long)((5500)*(20000000/4000000.0)));
  1495                           
  1496                           ;incstack = 0
  1497  0009AA  0E24               	movlw	36
  1498  0009AC  6E09               	movwf	??_Lcd_Delay5500us& (0+255),c
  1499  0009AE  0EB6               	movlw	182
  1500  0009B0                     u247:
  1501  0009B0  2EE8               	decfsz	wreg,f,c
  1502  0009B2  D7FE               	goto	u247
  1503  0009B4  2E09               	decfsz	??_Lcd_Delay5500us& (0+255),f,c
  1504  0009B6  D7FC               	goto	u247
  1505  0009B8  0012               	return		;funcret
  1506  0009BA                     __end_of_Lcd_Delay5500us:
  1507                           	opt stack 0
  1508                           tblptru	equ	0xFF8
  1509                           tblptrh	equ	0xFF7
  1510                           tblptrl	equ	0xFF6
  1511                           tablat	equ	0xFF5
  1512                           postinc0	equ	0xFEE
  1513                           wreg	equ	0xFE8
  1514                           postdec1	equ	0xFE5
  1515                           fsr1l	equ	0xFE1
  1516                           status	equ	0xFD8
  1517                           
  1518 ;; *************** function _I2C_Init *****************
  1519 ;; Defined at:
  1520 ;;		line 11 in file "my_i2c.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  clock_output    1    wreg     unsigned char 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  clock_output    1    0[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1534 ;;      Params:         0       0       0       0       0       0       0
  1535 ;;      Locals:         1       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0
  1537 ;;      Totals:         1       0       0       0       0       0       0
  1538 ;;Total ram usage:        1 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text12
  1548  000966                     __ptext12:
  1549                           	opt stack 0
  1550  000966                     _I2C_Init:
  1551                           	opt stack 30
  1552                           
  1553                           ;incstack = 0
  1554                           ;I2C_Init@clock_output stored from wreg
  1555  000966  6E09               	movwf	I2C_Init@clock_output,c
  1556                           
  1557                           ;my_i2c.c: 13: SSPSTAT &= 0x3F;
  1558  000968  0E3F               	movlw	63
  1559  00096A  16C7               	andwf	4039,f,c	;volatile
  1560                           
  1561                           ;my_i2c.c: 14: SSPCON1 = 0x00;
  1562  00096C  6AC6               	clrf	4038,c	;volatile
  1563                           
  1564                           ;my_i2c.c: 15: SSPCON2 = 0x00;
  1565  00096E  6AC5               	clrf	4037,c	;volatile
  1566                           
  1567                           ;my_i2c.c: 16: SSPCON1 |= 0b00001000;
  1568  000970  86C6               	bsf	4038,3,c	;volatile
  1569                           
  1570                           ;my_i2c.c: 17: SSPSTAT |= 0b10000000;
  1571  000972  8EC7               	bsf	4039,7,c	;volatile
  1572                           
  1573                           ;my_i2c.c: 19: TRISCbits.TRISC3 = 1;
  1574  000974  8694               	bsf	3988,3,c	;volatile
  1575                           
  1576                           ;my_i2c.c: 20: TRISCbits.TRISC4 = 1;
  1577  000976  8894               	bsf	3988,4,c	;volatile
  1578                           
  1579                           ;my_i2c.c: 22: SSPCON1 |= 0b00100000;
  1580  000978  8AC6               	bsf	4038,5,c	;volatile
  1581                           
  1582                           ;my_i2c.c: 24: SSPADD = clock_output;
  1583  00097A  C009  FFC8         	movff	I2C_Init@clock_output,4040	;volatile
  1584  00097E  0012               	return		;funcret
  1585  000980                     __end_of_I2C_Init:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1l	equ	0xFE1
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _I2C_Close *****************
  1598 ;; Defined at:
  1599 ;;		line 58 in file "my_i2c.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;		None               void
  1606 ;; Registers used:
  1607 ;;		status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1613 ;;      Params:         0       0       0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0
  1616 ;;      Totals:         0       0       0       0       0       0       0
  1617 ;;Total ram usage:        0 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text13
  1627  0009DA                     __ptext13:
  1628                           	opt stack 0
  1629  0009DA                     _I2C_Close:
  1630                           	opt stack 30
  1631                           
  1632                           ;my_i2c.c: 60: SSPCON1 &= 0xDF;
  1633                           
  1634                           ;incstack = 0
  1635  0009DA  9AC6               	bcf	4038,5,c	;volatile
  1636  0009DC  0012               	return		;funcret
  1637  0009DE                     __end_of_I2C_Close:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           postdec1	equ	0xFE5
  1646                           fsr1l	equ	0xFE1
  1647                           status	equ	0xFD8
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1l	equ	0xFE1
  1656                           status	equ	0xFD8
  1657                           
  1658                           	psect	rparam
  1659  0000                     tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1l	equ	0xFE1
  1667                           status	equ	0xFD8
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           postdec1	equ	0xFE5
  1675                           fsr1l	equ	0xFE1
  1676                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      8      16
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Text@buffer	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Text
    _MCP47x6_Write_DAC->_I2C_WriteByte
    _I2C_WriteByte->_I2C_Idle
    _I2C_Stop->_I2C_Idle
    _I2C_Start->_I2C_Idle
    _Lcd_Text->_Lcd_CharCP
    _Lcd_Text->_Lcd_Command
    _Lcd_CharCP->_Lcd_Delay5500us
    _Lcd_Init->_Lcd_Command
    _Lcd_Command->_Lcd_Delay5500us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     980
                          _I2C_Close
                           _I2C_Init
                        _Lcd_Command
                           _Lcd_Init
                           _Lcd_Text
                  _MCP47x6_Write_DAC
 ---------------------------------------------------------------------------------
 (1) _MCP47x6_Write_DAC                                    3     1      2     146
                                              2 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteByte                                        1     1      0      15
                                              1 COMRAM     1     1      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Text                                             4     2      2     549
                                              4 COMRAM     4     2      2
                         _Lcd_CharCP
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_CharCP                                           3     3      0     120
                                              1 COMRAM     3     3      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     150
                                              4 COMRAM     1     1      0
                        _Lcd_Command
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0     120
                                              1 COMRAM     3     3      0
                    _Lcd_Delay5500us
                       _Lcd_Delay5us
 ---------------------------------------------------------------------------------
 (3) _Lcd_Delay5us                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Lcd_Delay5500us                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Close                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Close
   _I2C_Init
   _Lcd_Command
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Init
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Delay5500us
     _Lcd_Delay5us
   _Lcd_Text
     _Lcd_CharCP
       _Lcd_Delay5500us
       _Lcd_Delay5us
     _Lcd_Command
       _Lcd_Delay5500us
       _Lcd_Delay5us
   _MCP47x6_Write_DAC
     _I2C_Start
       _I2C_Idle
     _I2C_Stop
       _I2C_Idle
     _I2C_WriteByte
       _I2C_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      8      10       1       12.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      15        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jun 29 15:20:39 2018

          __size_of_I2C_Close 0004            __size_of_I2C_Start 000C                            PL2 0688  
                          PL4 075E                            PL6 06A0                            PL8 0776  
                 _SSPSTATbits 000FC7                            l19 07E8                            u10 098A  
                          u18 098C                            u35 06EC                            u45 06F4  
                          u55 0702                            u65 0616                            u75 061E  
                          u85 062C                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         PL10 06B8                           PL20 089C                           PL12 078E  
                         PL22 0846                           PL14 06CE                           PL16 07A4  
                         PL18 0838                           l160 09C0                           l234 08F2  
                         l148 09CC                           l193 0946                           l198 093C  
                         l840 0980                  __CFG_CPB$OFF 000000                           u207 0714  
                         u217 0748                           u227 099A                           u237 09A2  
                         u247 09B0                  __CFG_CPD$OFF 000000                           u187 063E  
                         u197 0672                           wreg 000FE8           __end_of_Lcd_Command 075E  
        I2C_Init@clock_output 0009                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        l1050 085E                          l1052 0864                          l1060 0884  
                        l1062 088C                          l1054 086A                          l1048 0858  
                        l1066 0894                          l1058 0872                          STR_1 0601  
           ??_Lcd_Delay5500us 0009                          _main 08AA              __end_of_I2C_Idle 0998  
            __end_of_I2C_Init 0980                          fsr1l 000FE1          __end_of_Lcd_Delay5us 09AA  
            __end_of_I2C_Stop 09C6                          start 0000                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010                    _Lcd_CharCP 0608  
                       ?_main 0009                         _CMCON 000FB4                         _TRISB 000F93  
                       _TRISC 000F94                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
           __end_of_I2C_Close 09DE             __end_of_I2C_Start 09D2                __CFG_BOREN$OFF 000000  
                       tablat 000FF5                         status 000FD8              __end_of_Lcd_Init 0838  
            __end_of_Lcd_Text 089C               __initialization 08F4                  __end_of_main 08F4  
                 _Lcd_Command 06DE                        ??_main 0011                 __activetblptr 000002  
                      _ADCON1 000FC1        __size_of_I2C_WriteByte 002A                        _OSCCON 000FD3  
              Lcd_Text@buffer 000E                        _SSPADD 000FC8                        _SSPBUF 000FC9  
              __CFG_XINST$OFF 000000                   ?_Lcd_CharCP 0009  MCP47x6_Write_DAC@mcp47x6_adr 000D  
                   ?_I2C_Idle 0009                  __pdataCOMRAM 0001                     ?_I2C_Init 0009  
                   ?_I2C_Stop 0009                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8         __size_of_Lcd_Delay5us 0012  
          Lcd_Command@command 000C                    __accesstop 0080       __end_of__initialization 0914  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                __pcstackCOMRAM 0009  
               _I2C_WriteByte 091E                    __end_ofPL2 06A0                    __end_ofPL4 0776  
                  __end_ofPL6 06B8                    __end_ofPL8 078E                  _Lcd_Delay5us 0998  
                  ??_I2C_Idle 0009               _Lcd_Delay5500us 09AA                    ??_I2C_Init 0009  
                  ??_I2C_Stop 000A                     ?_Lcd_Init 0009                     ?_Lcd_Text 000D  
         __size_of_Lcd_CharCP 0080                ?_I2C_WriteByte 0009                    ??_Lcd_Init 000D  
                  ??_Lcd_Text 000F                       _SSPCON1 000FC6                       _SSPCON2 000FC5  
                     _SSPSTAT 000FC7                     _I2C_Close 09DA                     _I2C_Start 09C6  
                     __Hparam 0000                       __Lparam 0000       __end_of_Lcd_Delay5500us 09BA  
                __psmallconst 0600               __CFG_STVREN$OFF 000000                       __pcinit 08F4  
                     __ramtop 0600                  ?_Lcd_Command 0009                       __ptext0 08AA  
                     __ptext1 0948                       __ptext2 091E                       __ptext3 09BA  
                     __ptext4 09C6                       __ptext5 0980                       __ptext6 0854  
                     __ptext7 0608                       __ptext8 07B4                       __ptext9 06DE  
        end_of_initialization 0914                 __Lmediumconst 0000                    ?_I2C_Close 0009  
                  ?_I2C_Start 0009               ??_I2C_WriteByte 000A                  ??_Lcd_CharCP 000A  
                     postdec1 000FE5                       postinc0 000FEE                     Lcd_Text@x 000D  
                   Lcd_Text@y 000F    MCP47x6_Write_DAC@value_dac 000B                     _TRISBbits 000F93  
                   _TRISCbits 000F94             __size_of_I2C_Idle 0018             __size_of_I2C_Init 001A  
           __size_of_I2C_Stop 000C            __end_of_Lcd_CharCP 0688              ?_Lcd_Delay5500us 0009  
               __pidataCOMRAM 09D2                   __end_ofPL10 06CE                   __end_ofPL20 08AA  
                 __end_ofPL12 07A4                   __end_ofPL22 0854                   __end_ofPL14 06DE  
                 __end_ofPL16 07B4                   __end_ofPL18 0846           start_initialization 08F4  
           __size_of_Lcd_Init 0084             __size_of_Lcd_Text 0048                   ??_I2C_Close 0009  
            __CFG_OSC$INTIO67 000000                   ??_I2C_Start 000A             _MCP47x6_Write_DAC 0948  
          ?_MCP47x6_Write_DAC 000B              __CFG_LPT1OSC$OFF 000000           ??_MCP47x6_Write_DAC 000D  
               _degree_symbol 0001          __size_of_Lcd_Command 0080     __end_of_MCP47x6_Write_DAC 0966  
           __CFG_CCP2MX$PORTC 000000                   __smallconst 0600                      _I2C_Idle 0980  
                    _I2C_Init 0966                      _I2C_Stop 09BA                      _LATBbits 000F8A  
            __CFG_WDTPS$32768 000000                  Lcd_Init@data 000D                      _Lcd_Init 07B4  
                    _Lcd_Text 0854                     copy_data0 0908    __size_of_MCP47x6_Write_DAC 001E  
                Lcd_Text@data 0010                      __Hrparam 0000                      __Lrparam 0000  
       __end_of_I2C_WriteByte 0948                 ?_Lcd_Delay5us 0009                      __ptext10 0998  
                    __ptext11 09AA                      __ptext12 0966                      __ptext13 09DA  
                 Lcd_CharCP@c 000C                 __size_of_main 004A         I2C_WriteByte@data_out 000A  
              ??_Lcd_Delay5us 0009      __size_of_Lcd_Delay5500us 0010                 ??_Lcd_Command 000A  
                 _SSPCON1bits 000FC6                   _SSPCON2bits 000FC5  
